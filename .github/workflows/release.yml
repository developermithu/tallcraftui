name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    env:
      # initial version number
      CURRENT_VERSION: "0.9.0"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Bump version
        id: bump_version
        run: |
          # Bump the version (you can customize this logic as needed)
          IFS='.' read -r -a VERSION_PARTS <<< "${{ env.CURRENT_VERSION }}"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Generate changelog
        id: generate_changelog
        run: |
          NEW_VERSION=${{ env.NEW_VERSION }}
          DATE=$(date +'%Y-%m-%d')
          echo "## [$NEW_VERSION] - $DATE" >> temp_changelog.md
          git log --pretty=format:"- %s" $(git describe --tags --abbrev=0)..HEAD >> temp_changelog.md
          echo "" >> temp_changelog.md
          cat CHANGELOG.md >> temp_changelog.md
          mv temp_changelog.md CHANGELOG.md

      - name: Commit changes
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add CHANGELOG.md
          git commit -m "chore(release): ${{ env.NEW_VERSION }} [skip ci]"
          git tag -a "v${{ env.NEW_VERSION }}" -m "Release version ${{ env.NEW_VERSION }}"
          git push origin main --tags

      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ env.NEW_VERSION }}"
          release_name: "v${{ env.NEW_VERSION }}"
          body: |
            ## Changelog
            ${{ steps.generate_changelog.outputs.changelog }}
          draft: false
          prerelease: false
